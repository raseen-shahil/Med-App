rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /sellers/{sellerId} {
      allow read: if request.auth != null && request.auth.uid == sellerId;
      allow create: if request.auth != null && request.auth.uid == sellerId;
      allow update: if request.auth != null && request.auth.uid == sellerId;
      allow delete: if false;
    }
    match /medicines/{medicineId} {
      allow read: if true;
      allow create: if request.auth != null && request.resource.data.sellerId == request.auth.uid;
      allow update, delete: if request.auth != null && resource.data.sellerId == request.auth.uid;
    }
    match /orders/{orderId} {
      allow read: if request.auth != null && (
        request.auth.uid == resource.data.userId ||
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'seller'
      );
      allow update: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'seller' &&
        request.resource.data.diff(resource.data).affectedKeys().hasOnly(['status', 'updatedAt']) &&
        (request.resource.data.status == 'shipped' || request.resource.data.status == 'cancelled');
    }
  }
}

service firebase.storage {
  match /b/{bucket}/o {
    match /medicines/{userId}/{allPaths=**} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.uid == userId;
    }
  }
}